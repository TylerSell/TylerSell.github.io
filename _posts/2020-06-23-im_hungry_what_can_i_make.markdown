---
layout: post
title:      "I'm Hungry What Can I Make?"
date:       2020-06-23 17:01:56 +0000
permalink:  im_hungry_what_can_i_make
---


Hey everyone it's project time again.  This time it is Javascript with a Rails API project.  The first step was to come up with an idea of what to make.  I thought and thought and thought but no ideas were coming to me.  While thinking about it something happened.  I got hungry.  So I decided to take a break and make some dinner.  That's where I ran into a big problem.  I wanted to make dinner but I was not sure what I could make based on the stuff in the pantry and fridge.  I started to go through my recipes and decided on a couple of them that would work for dinner.  I then took the first recipe and looked to see if I had all the ingredients available to make said recipe.  Spoiler alert: I didn't.  On to the next recipe and the same process.  Still nothing.  Finally on the fourth recipe I looked at I was able to make since I had all the ingredients.  I was really frustrated that it took so long....or perhaps I was hangry but that is a different story entirely.  Then it hit me.  I was essentially comparing arrays to see which recipe I could make.  I could solve this problem.  And even better it could work for my project even if it was going to be slightly more complicated than the requirements.  But no worries.  It was time to plan.

First I came up with the general idea.  I wanted to be able to enter ***MY RECIPES*** into a database with all the ingredients.  I also needed to be able to add my pantry, fridge, spices, etc. into a database that I could call my pantry.  I then needed to be able to see quickly if all the ingredients in the recipe were in my pantry.  If they all were available then the program would tell me some way that I could make that recipe and if all items were NOT in the pantry it would also let me know that I could not make this recipe based on the current pantry.

Next I came up with the workflow and all the tables and relationships.  I put it down in a simple flow chart diagram that I could refer back to.  The planning phase which I had always felt was mildly overrated was really helpful to give me direction and focus my efforts on small portions of the project at one time.  I will not make the mistake of overlooking this in the future.

Now it is time to start building and coding.  I quickly set up a project folder locally and on my GitHub page.  I then generated a new Rails project with the `--api` flag so that I would be set to send and recieve JSON data and it would not create any unnecessary views for me.  I then created a frontend folder that only had a Javascript file, index.html file, and a CSS file in it.  I then connected my local project with the GitHub and pushed my first commit.  Now is when the real magic happens.

I built all the models and controllers for the API and migrated the DB so that I could test the associations and get all the correct information.  I then generated a seed file in my backend API so that I could play with data not only in the console but also when I started my frontend Node server.  This step was the most helpful for me to be able to test.  As I would continue through this project I would write a couple lines of code and then start the Node server to test and check the console for desired action.  If it worked I would push up the code to GitHub or if it didn't work I would debug that single issue.  

This process of building little by little was the approach that I took this time to building this project.  I started with the user.  First step for that was the ability to sign up.  I worked and worked till I got this right.  Once it worked it was time to be able to login if you already had an account.  Again this was alot of trial and error till I got it working but once I finally did it was very satisfying.  After a user was able to signup and login I needed a way for the user to be able to edit their information.  So I needed to build a way for the user to see their current information, minus their password, and be able to edit it.  So I built the action for the user.  Once that was done I struggled through the edit phase of User information and updating it with the database.  After what felt like way too long success finally came.  I thought that I was done with the User phase until I realized that in my haste I had not built logout capabilities.  So one last little item and we were ready to start with the next feature.

This process continued from feature to feature.  Building little by little till the project was completed.  I build the pantry show with a form to add a new item to the pantry and a delete item button next to each pantry item.  I then went to the hardest part which was the recipe pages.  The show page/action was easy.  A simple fetch and we were there.  The recipe new and update actions were not as simple.  These were not nearly as simple for the fact that my API was using nested forms.  So when a new recipe was submitted or updated it needed to modify/create records for Recipe table, associate with the User table, and create/update Ingredient and Instruction tables with associations to said recipe.  That is a lot of moving parts to add to one form.  But finally after about 7 hours of trial and error and reading and researching and debugging I got it to work.  And I must say AHHHHH the POWER you have available to you in one form.  It was very satisfying.  

At this point I was done or so I thought till I realized that the only thing that I had not done was implement the array check that gave me this epiphany.  I then had to backtrack and decide exactly how I was going to implement that feature.  It was much easier than I thought and really took me less than an hour to put in the program.  All told not bad.  The only thing left to do was to test the program and make sure that there were no weird bugs.  Make sure that only what needed to be on the screen was there and that it didn't duplicate it when clicked multiple times.  I also had to make sure that everything worked as I expected, even though I tested constantly throughout the build process, testing to make sure I could do everything that I wanted to do along the way.

It turned out great.  I can even see ways that I could continue to build on this project in the future and I am even thinking about publishing this project to make it public so that everyone can benefit and never again have to search the whole pantry multiple times to find the one recipe that you can make.  This way we all eat healthier and save money from getting takeout.  Look for it in the future and thanks for reading.
