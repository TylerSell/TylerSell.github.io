---
layout: post
title:      "Why Software Programming?"
date:       2018-08-04 03:30:58 +0000
permalink:  why_software_programming
---


Hi there!  I'm Tyler Sell and this is my first entry into my blog *Coding: A Continuous Journey of Learning.* This first post is for you to get to know me a little bit.  I am going to take you through the timeline of what led me to pursue software programming as a profession.  Let's travel back in time.....

We are heading back to my childhood.  I would like to tell you a specific time or year or age but let's face it, that is more than 20 years ago, and I can't remember dinner last night let alone specifics from that long ago.  I digress.  I was always a kid who was curious about how things worked.  I always like to see how things were made, built, and worked.  Didn't matter what it was but I wanted to know how it worked.  This all probably stemmed from my father working in the construction field.  I loved the process he went through to build things.  The apple didn't fall far from the tree it seems.  I loved building things and more specifically building things to fix current problems I was facing.  I vividly remember "designing" something to solve my biggest problem in my little kid life.....a headphone splitter so more than one person could listen to the same thing at the same time.  It was ingenious to me as that meant car trips were much more enjoyable.  I didn't have to share our single walkman (think really big iPod) with my younger brother.  I know, I know.  They probably already existed but I didn't know that.  But coming up with that idea made me think at that age that I wanted to make/build things that solved problems.

Fast forward to college.  My love of designing and building things led me to taking drafting classes in college.  And by this point I was so enamored with building and designing that when I made the college baseball team I chose to take drafting classes instead of playing baseball.  That was a huge life choice for me as I was all-in on drafting and designing anything and everything.  Classes went on for a while when I got my first job in the industry.  I worked for a large engineering firm and helped with the designing of power plants all across the country.  It was awesome.....till it wasn't anymore.  When I realized this, I did some soul searching and realized why it was no longer fun.  I had learned everything that I needed to do that job and there was very little left to learn.  My mind was unhappy because I wasn't feeding it with a constant amount of new information.  So it was time to find something new.

Moving forward again to current time.  I left the engineering firm and a decent paycheck for the exciting world of sales and marketing.  And it didn't disappoint in the exciting department.  For the better part of the last eight years every single day has been different.  I meet new people all the time and get to hear their story and I learn new things all the time.  I solved the problem of feeding my brain with new information but recently even that has gotten stale.  Why?  Why am I not entirely ecstatic everyday since each day is different and filled with so many new things to learn?  After a little more soul searching I realized that I stopped building things.  This is when I had my "lightbulb moment."  I need to both learn new things each day *AND* build things.  I had operated for too long only satisfying one part of my brain while neglecting the other side.  It made me remember this quote from my middle school basketball coach:

> Everyday you are either getting better or getting worse.  You never stay the same.       --Coach Deffenbaugh
> 

So now the real quandry begins.  The search for something that allows me to build things and learn new things everyday.  This was no small task.  I spent weeks, which turned into months, searching for the solutions to my problem.  What can I do?  Then like a sack of bricks it hit me.  Why not software programming?   I have next to zero knowledge on the subject so there will be no shortage of learning.  And software programming is essentially building everything you want to do electronically.  The income range didn't hurt.  Steady hours for a potential job didn't hurt.  But all those things were secondary to the main problem.  And thus far through building a series of extremely basic command line programs I have learned tons.  And not to mention when you work and work and work and the thing you are building finally does what it is supposed to do, there almost isn't a better high.  The elation of that completion and excitement for the next challenge is real.

So why software programming?  Simply.  Because it makes me happy.  And that total happiness is something that I haven't experienced in a long time.  Outside of my kids and my amazing girlfriend who pushed me to do this nothing at the moment makes me happier.  It feels like I have found my calling at age 33.  Better late than never.  It's so amazing thus far and I cannot wait to see what I learn and make next.

